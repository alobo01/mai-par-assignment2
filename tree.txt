 SymbolicPlanners.PathNode{GenericState}(0xd23eb6a2a0d4b8b7, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 0.0f0, SymbolicPlanners.LinkedNodeRef(0xd23eb6a2a0d4b8b7, nothing, nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xab2985996cda525c, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 1.0f0, SymbolicPlanners.LinkedNodeRef(0xd23eb6a2a0d4b8b7, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x322d1d30e552905c, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 2.0f0, SymbolicPlanners.LinkedNodeRef(0xab2985996cda525c, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x55df3ac3d2a28e12, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 2.0f0, SymbolicPlanners.LinkedNodeRef(0xab2985996cda525c, pick-up-item(robot1, fish, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xb7b9ff3aec0a343e, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 2.0f0, SymbolicPlanners.LinkedNodeRef(0xab2985996cda525c, pick-up-item(robot1, seaweed, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xcee081cc1c95328e, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 2.0f0, SymbolicPlanners.LinkedNodeRef(0xab2985996cda525c, pick-up-item(robot1, rice, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x694d112182ff282b, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 3.0f0, SymbolicPlanners.LinkedNodeRef(0x322d1d30e552905c, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x77c13058143255c6, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 3.0f0, SymbolicPlanners.LinkedNodeRef(0x55df3ac3d2a28e12, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xd14c0412a5e9e9ff, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 3.0f0, SymbolicPlanners.LinkedNodeRef(0xb7b9ff3aec0a343e, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x9d9c4e3f1b18b1b8, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 3.0f0, SymbolicPlanners.LinkedNodeRef(0xcee081cc1c95328e, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x56ab74a0acf2a147, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0x77c13058143255c6, drop-item(robot1, fish, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x696c661a4b8a8122, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0xd14c0412a5e9e9ff, drop-item(robot1, seaweed, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x4c0f78e07cfde4a9, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0x9d9c4e3f1b18b1b8, drop-item(robot1, rice, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc747c447a8e6fffc, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0x56ab74a0acf2a147, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x5ba31f0384ebc9dc, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0x696c661a4b8a8122, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xcd4894d87975d54c, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0x4c0f78e07cfde4a9, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xb1ecf692adf60c7d, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xc747c447a8e6fffc, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xb2db5c8093f9553a, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xc747c447a8e6fffc, pick-up-item(robot1, seaweed, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x7acb66c3c8b38b66, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xc747c447a8e6fffc, pick-up-item(robot1, rice, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x501a66e116051511, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0x5ba31f0384ebc9dc, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xfbc66e028be62289, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0x5ba31f0384ebc9dc, pick-up-item(robot1, fish, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc3921e1e5df2e5a7, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0x5ba31f0384ebc9dc, pick-up-item(robot1, rice, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x8a00e92bc1c901b7, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xcd4894d87975d54c, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x910d7cac9b32cc84, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xcd4894d87975d54c, pick-up-item(robot1, fish, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x7d56dc4b278aa6b5, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xcd4894d87975d54c, pick-up-item(robot1, seaweed, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x5eb006bd76aa3455, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xb1ecf692adf60c7d, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x706fd067aa9e5a25, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xb2db5c8093f9553a, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x795a1660f6212fcf, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0x7acb66c3c8b38b66, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xa25cbbb159cd2467, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0x501a66e116051511, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xd0141b3a76a4dfea, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xfbc66e028be62289, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x0a61c4f2453ed4dd, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xc3921e1e5df2e5a7, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xe95fa69a33509577, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0x8a00e92bc1c901b7, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xf0c3b6eed077b18e, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0x910d7cac9b32cc84, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xf895950776b3a48a, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0x7d56dc4b278aa6b5, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xf294898190f7c0b5, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 8.0f0, SymbolicPlanners.LinkedNodeRef(0x706fd067aa9e5a25, drop-item(robot1, seaweed, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x3d1b5fa4111c821d, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 8.0f0, SymbolicPlanners.LinkedNodeRef(0x795a1660f6212fcf, drop-item(robot1, rice, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x06497a09cadcbbb9, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 8.0f0, SymbolicPlanners.LinkedNodeRef(0x0a61c4f2453ed4dd, drop-item(robot1, rice, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x28366157455dd594, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 9.0f0, SymbolicPlanners.LinkedNodeRef(0xf294898190f7c0b5, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x481c5f1d76d0f43d, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 9.0f0, SymbolicPlanners.LinkedNodeRef(0x3d1b5fa4111c821d, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xa818eb2ed32bfdc4, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 9.0f0, SymbolicPlanners.LinkedNodeRef(0x06497a09cadcbbb9, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x3d8abdab7bfff307, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 10.0f0, SymbolicPlanners.LinkedNodeRef(0x28366157455dd594, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x4c0b5c2c5284454a, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 10.0f0, SymbolicPlanners.LinkedNodeRef(0x28366157455dd594, pick-up-item(robot1, rice, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x1ba3443d742cb0c5, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 10.0f0, SymbolicPlanners.LinkedNodeRef(0x481c5f1d76d0f43d, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc4cac542210b7d18, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 10.0f0, SymbolicPlanners.LinkedNodeRef(0x481c5f1d76d0f43d, pick-up-item(robot1, seaweed, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xfd3b72c5a344e2fd, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 10.0f0, SymbolicPlanners.LinkedNodeRef(0xa818eb2ed32bfdc4, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x28e666dc751543e7, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 10.0f0, SymbolicPlanners.LinkedNodeRef(0xa818eb2ed32bfdc4, pick-up-item(robot1, fish, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x26ee8c4aa33df0d5, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 11.0f0, SymbolicPlanners.LinkedNodeRef(0x3d8abdab7bfff307, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xae0f605612831707, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 11.0f0, SymbolicPlanners.LinkedNodeRef(0x4c0b5c2c5284454a, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x33ab67805a501c87, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 11.0f0, SymbolicPlanners.LinkedNodeRef(0x1ba3443d742cb0c5, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x50310fad5364c8ad, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 11.0f0, SymbolicPlanners.LinkedNodeRef(0xc4cac542210b7d18, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xdbf578444c7873c0, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 11.0f0, SymbolicPlanners.LinkedNodeRef(0xfd3b72c5a344e2fd, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xf94f541e923818fb, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 11.0f0, SymbolicPlanners.LinkedNodeRef(0x28e666dc751543e7, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x7457f4eeacaf7118, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 12.0f0, SymbolicPlanners.LinkedNodeRef(0xae0f605612831707, drop-item(robot1, rice, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x758d42a875e5beeb, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 13.0f0, SymbolicPlanners.LinkedNodeRef(0x7457f4eeacaf7118, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x0f0505d129e56c67, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 14.0f0, SymbolicPlanners.LinkedNodeRef(0x758d42a875e5beeb, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xa6824cf6962a510d, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 15.0f0, SymbolicPlanners.LinkedNodeRef(0x0f0505d129e56c67, move(robot1, sa, pa), nothing), nothing)


