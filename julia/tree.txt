 SymbolicPlanners.PathNode{GenericState}(0x2f3f6414b85d7dc5, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 0.0f0, SymbolicPlanners.LinkedNodeRef(0x2f3f6414b85d7dc5, nothing, nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xf91294cc0bab5f20, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 1.0f0, SymbolicPlanners.LinkedNodeRef(0x2f3f6414b85d7dc5, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x5c36e55e09c36d8f, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), applicable(raw, fish), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 1.0f0, SymbolicPlanners.LinkedNodeRef(0x2f3f6414b85d7dc5, pick-up-item(robot1, sushi, unprepared, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x3c13d8eb2ca411dd, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), applicable(raw, fish), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 2.0f0, SymbolicPlanners.LinkedNodeRef(0x5c36e55e09c36d8f, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x80ef210cb9059d25, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 3.0f0, SymbolicPlanners.LinkedNodeRef(0x3c13d8eb2ca411dd, drop-item(robot1, sushi, unprepared, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xe5ab174568f7057e, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 2.0f0, SymbolicPlanners.LinkedNodeRef(0xf91294cc0bab5f20, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x0cb1bd80d44987cb, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 2.0f0, SymbolicPlanners.LinkedNodeRef(0xf91294cc0bab5f20, pick-up-item(robot1, fish, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc7b30d57377adc4f, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 2.0f0, SymbolicPlanners.LinkedNodeRef(0xf91294cc0bab5f20, pick-up-item(robot1, seaweed, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x2842c446a4ed75b3, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 2.0f0, SymbolicPlanners.LinkedNodeRef(0xf91294cc0bab5f20, pick-up-item(robot1, rice, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x1b3665f6f33b5fcc, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0x80ef210cb9059d25, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x961175ad454eb325, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0x80ef210cb9059d25, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x48837d9ac3ccb197, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0x80ef210cb9059d25, pick-up-item(robot1, fish, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xf2ce3b101bdbc5e9, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0x80ef210cb9059d25, pick-up-item(robot1, seaweed, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc5e4a706de3a0bbe, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0x80ef210cb9059d25, pick-up-item(robot1, rice, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x1d5552db656d4051, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 3.0f0, SymbolicPlanners.LinkedNodeRef(0xe5ab174568f7057e, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x43664466d0fbd76b, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 3.0f0, SymbolicPlanners.LinkedNodeRef(0x0cb1bd80d44987cb, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x03f36e3333f747dc, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 3.0f0, SymbolicPlanners.LinkedNodeRef(0xc7b30d57377adc4f, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x5beef8aedca1766a, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 3.0f0, SymbolicPlanners.LinkedNodeRef(0x2842c446a4ed75b3, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc629a7eeb3e8dc05, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0x961175ad454eb325, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x4a4ff88a8b816662, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0x48837d9ac3ccb197, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x8db1c61d5a52c13b, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0xf2ce3b101bdbc5e9, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xe8263fa2bcdce879, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0xc5e4a706de3a0bbe, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x6063e702975d8bc7, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0x1d5552db656d4051, drop-item(robot1, sushitool, clean, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc4ef93b8c8683632, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0x43664466d0fbd76b, drop-item(robot1, fish, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x5fd22a2b48bb8ade, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0x03f36e3333f747dc, drop-item(robot1, seaweed, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xa6beb9de517e3d5c, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 4.0f0, SymbolicPlanners.LinkedNodeRef(0x5beef8aedca1766a, drop-item(robot1, rice, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc616ce97741dcc92, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0x6063e702975d8bc7, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x6af8de5154daebe7, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0xc4ef93b8c8683632, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xa6695191d8283b67, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0x5fd22a2b48bb8ade, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc118093309111b92, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0xa6beb9de517e3d5c, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xb32452737c1e3f02, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), item-at(sushitool, clean, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xc629a7eeb3e8dc05, drop-item(robot1, sushitool, clean, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xb6547e9f346db4de, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, sa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0x4a4ff88a8b816662, drop-item(robot1, fish, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xb650bb7fcb1e31d1, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0x8db1c61d5a52c13b, drop-item(robot1, seaweed, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xd316cba1b4a8cc23, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xe8263fa2bcdce879, drop-item(robot1, rice, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xbe27fcfe9e19a2cb, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushitool, clean, pa), applicable(raw, fish), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0x6063e702975d8bc7, pick-up-item(robot1, sushi, unprepared, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x2aaf3b9efc6cb009, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), applicable(raw, fish), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0xc4ef93b8c8683632, pick-up-item(robot1, sushi, unprepared, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x032358c605c8c60c, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), applicable(raw, fish), item-at(seaweed, raw, pa), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0x5fd22a2b48bb8ade, pick-up-item(robot1, sushi, unprepared, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xb06ac4c765f76529, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), applicable(raw, fish), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 5.0f0, SymbolicPlanners.LinkedNodeRef(0xa6beb9de517e3d5c, pick-up-item(robot1, sushi, unprepared, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x30eab5bd2bc41dbb, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), item-at(sushitool, clean, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xb32452737c1e3f02, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc7aed9b028dcd22e, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, sa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xb6547e9f346db4de, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x95141c2f1bd6fca6, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xb650bb7fcb1e31d1, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x460cc51f59d1f70d, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, sa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xd316cba1b4a8cc23, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xa021162b211c80bd, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushitool, clean, pa), applicable(raw, fish), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xbe27fcfe9e19a2cb, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x1be5874d9030cba2, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), applicable(raw, fish), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0x2aaf3b9efc6cb009, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x4a50abc7dcdb2605, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), applicable(raw, fish), item-at(seaweed, raw, pa), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0x032358c605c8c60c, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x3a1f4d2536496c68, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), applicable(raw, fish), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xb06ac4c765f76529, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x79667ae4b9b3e462, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xc616ce97741dcc92, pick-up-item(robot1, fish, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xec0e8d60300a4756, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xc616ce97741dcc92, pick-up-item(robot1, seaweed, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xa9bc0fcad1d3dc77, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xc616ce97741dcc92, pick-up-item(robot1, rice, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xcac0ace41d60de2c, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0x6af8de5154daebe7, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x751849d841b43cee, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0x6af8de5154daebe7, pick-up-item(robot1, seaweed, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc327591d9296712e, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0x6af8de5154daebe7, pick-up-item(robot1, rice, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x017f88973a4889b7, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xa6695191d8283b67, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc1d3a8deb8adac01, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xa6695191d8283b67, pick-up-item(robot1, fish, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc5275745e5beb67d, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xa6695191d8283b67, pick-up-item(robot1, rice, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x056f25f33bfcf935, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xc118093309111b92, pick-up-item(robot1, sushitool, clean, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x70accbe014c5cc6a, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xc118093309111b92, pick-up-item(robot1, fish, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x9d8a51867f1e9302, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 6.0f0, SymbolicPlanners.LinkedNodeRef(0xc118093309111b92, pick-up-item(robot1, seaweed, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x7368d6f60c10c1d5, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0x79667ae4b9b3e462, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc6e1cf9f980ba1d0, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 8.0f0, SymbolicPlanners.LinkedNodeRef(0x7368d6f60c10c1d5, drop-item(robot1, fish, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xf45a1a30171063b1, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xec0e8d60300a4756, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x0bca272c1ad6ac0a, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 8.0f0, SymbolicPlanners.LinkedNodeRef(0xf45a1a30171063b1, drop-item(robot1, seaweed, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x55ce32d4ae30460c, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xa9bc0fcad1d3dc77, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xce577f7118be88e6, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 8.0f0, SymbolicPlanners.LinkedNodeRef(0x55ce32d4ae30460c, drop-item(robot1, rice, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xb770ffe3436511ac, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xcac0ace41d60de2c, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x9ab6239570eaec70, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0x751849d841b43cee, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x04be1ddd6b35e854, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 8.0f0, SymbolicPlanners.LinkedNodeRef(0x9ab6239570eaec70, drop-item(robot1, seaweed, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x4f7b61983879c2fc, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xc327591d9296712e, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xaf78d489b56b5e0d, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 8.0f0, SymbolicPlanners.LinkedNodeRef(0x4f7b61983879c2fc, drop-item(robot1, rice, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x73fd9057736b0e5b, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0x017f88973a4889b7, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x143de3b0bebfd9b9, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xc1d3a8deb8adac01, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x8e15350432c1f2ee, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0xc5275745e5beb67d, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x16af015fafe5d987, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 8.0f0, SymbolicPlanners.LinkedNodeRef(0x8e15350432c1f2ee, drop-item(robot1, rice, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x4030c75e9c13f8c5, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, sushitool, clean), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0x056f25f33bfcf935, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xa9d78a5e3e17f69b, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), holding-item(robot1, fish, raw), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0x70accbe014c5cc6a, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x9597e725e7cbe021, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, sa), applicable(cooked, fish), item-at(sushi, unprepared, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(sushitool, clean, sa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 7.0f0, SymbolicPlanners.LinkedNodeRef(0x9d8a51867f1e9302, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x7c1cb6f63217d159, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushitool, clean, pa), applicable(raw, fish), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 9.0f0, SymbolicPlanners.LinkedNodeRef(0xc6e1cf9f980ba1d0, pick-up-item(robot1, sushi, unprepared, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x6fc80f72f308be34, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(seaweed, raw, sa), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), robot-free(robot1), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 9.0f0, SymbolicPlanners.LinkedNodeRef(0xc6e1cf9f980ba1d0, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x7a8c808f45a1c590, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 10.0f0, SymbolicPlanners.LinkedNodeRef(0x6fc80f72f308be34, pick-up-item(robot1, seaweed, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x562d2beb4c35f652, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), holding-item(robot1, seaweed, raw), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), applicable(raw, fish), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 11.0f0, SymbolicPlanners.LinkedNodeRef(0x7a8c808f45a1c590, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x33c0618b9f8543f4, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 12.0f0, SymbolicPlanners.LinkedNodeRef(0x562d2beb4c35f652, drop-item(robot1, seaweed, raw, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x6e4241c1e4d9026e, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushitool, clean, pa), applicable(raw, fish), item-at(seaweed, raw, pa), holding-item(robot1, sushi, unprepared), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 13.0f0, SymbolicPlanners.LinkedNodeRef(0x33c0618b9f8543f4, pick-up-item(robot1, sushi, unprepared, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x7ca777cb5583b09a, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), item-at(rice, raw, sa), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa)]), Dict{Symbol, Any}()), 13.0f0, SymbolicPlanners.LinkedNodeRef(0x33c0618b9f8543f4, move(robot1, pa, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x2bc163d0c286c3e0, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), robot-at(robot1, sa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 14.0f0, SymbolicPlanners.LinkedNodeRef(0x7ca777cb5583b09a, pick-up-item(robot1, rice, raw, sa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0x23825055be8599ed, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), holding-item(robot1, rice, raw)]), Dict{Symbol, Any}()), 15.0f0, SymbolicPlanners.LinkedNodeRef(0x2bc163d0c286c3e0, move(robot1, sa, pa), nothing), nothing)



 SymbolicPlanners.PathNode{GenericState}(0xc10aac9ebf93f85a, GenericState(Set(Compound[status(dirty), dish(sushi), ingredient(fish), tool(sushitool), location(sa), status(raw), location(pa), status(unprepared), status(prepared), ingredient(rice), status(clean), ingredient(seaweed), process(prepare), robot(robot1), status(cooked)]), Set(Term[connected(sa, pa), connected(pa, sa), applicable(dirty, sushitool), cause-status(prepare, sushi, sushi, prepared), applicable(raw, rice), applicable(unprepared, sushi), applicable(clean, sushitool), item-at(fish, raw, pa), applicable(cooked, fish), item-at(sushi, unprepared, pa), item-at(sushitool, clean, pa), robot-free(robot1), applicable(raw, fish), item-at(seaweed, raw, pa), applicable(cooked, rice), applicable(raw, seaweed), applicable(cooked, seaweed), requires-item(prepare, sushi, rice, raw), requires-item(prepare, sushi, sushitool, clean), applicable(prepared, sushi), robot-at(robot1, pa), requires-item(prepare, sushi, fish, raw), requires-item(prepare, sushi, seaweed, raw), done-at(prepare, sushi, pa), item-at(rice, raw, pa)]), Dict{Symbol, Any}()), 16.0f0, SymbolicPlanners.LinkedNodeRef(0x23825055be8599ed, drop-item(robot1, rice, raw, pa), nothing), nothing)



